// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  email         String         @unique
  password      String
  first_name    String?
  last_name     String?
  role          Role           @default(SELLER)
  Store         Store?
  refreshTokens RefreshToken[]
  Cart          Cart?
  Order         Order[]
}

enum Role {
  SELLER
  BUYER
}

model Store {
  id            Int       @id @default(autoincrement())
  User          User      @relation(fields: [userId], references: [id])
  userId        String    @unique
  address       String
  name          String
  phone_number  String?
  opening_hours String?
  closing_hours String?
  products      Product[]
}

model Product {
  id              Int      @id @default(autoincrement())
  name            String
  type            String
  price           Decimal  @db.Decimal(10, 2)
  original_price  Decimal  @db.Decimal(10, 2)
  expiration_date DateTime @db.Date
  imageUrl        String
  Store           Store?   @relation(fields: [storeId], references: [id])
  storeId         Int?
  Cart            Cart?    @relation(fields: [cartId], references: [id])
  cartId          Int?
  Order           Order?   @relation(fields: [orderId], references: [id])
  orderId         Int?
}

model Cart {
  id       Int       @id @default(autoincrement())
  User     User?     @relation(fields: [userId], references: [id])
  userId   String?   @unique
  products Product[]
}

model Order {
  id       Int       @id @default(autoincrement())
  products Product[]
  amount   Decimal   @db.Decimal(10, 2)
  address  Json?     @db.Json
  status   String    @default("pending")
  User     User?     @relation(fields: [userId], references: [id])
  userId   String?
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
